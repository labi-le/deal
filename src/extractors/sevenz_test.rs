#[cfg(test)]
mod tests {
    use super::super::SevenZExtractor;
    use crate::extractors::Extractor;
    use std::fs;
    use std::io::Cursor;
    use std::path::Path;
    use tempfile::tempdir;

    const SEVEN_Z_ARCHIVE: &[u8] = &[
        0x37, 0x7a, 0xbc, 0xaf, 0x27, 0x1c, 0x00, 0x04, 0xc1, 0x4f, 0x7b, 0x49,
        0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xb3, 0x7f, 0x26, 0xe5, 0x01, 0x00, 0x07, 0x68,
        0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x37, 0x7a, 0x00, 0x01, 0x04, 0x06, 0x00,
        0x01, 0x09, 0x0c, 0x00, 0x07, 0x0b, 0x01, 0x00, 0x01, 0x21, 0x21, 0x01,
        0x00, 0x0c, 0x08, 0x00, 0x08, 0x0a, 0x01, 0xeb, 0xcb, 0x89, 0xe7, 0x00,
        0x00, 0x05, 0x01, 0x19, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x13, 0x00, 0x74, 0x00, 0x65, 0x00,
        0x73, 0x00, 0x74, 0x00, 0x2e, 0x00, 0x74, 0x00, 0x78, 0x00, 0x74, 0x00,
        0x00, 0x00, 0x19, 0x00, 0x14, 0x0a, 0x01, 0x00, 0x00, 0x0f, 0xbd, 0xa9,
        0xc1, 0x12, 0xdc, 0x01, 0x15, 0x06, 0x01, 0x00, 0x20, 0x80, 0xa4, 0x81,
        0x00, 0x00,
    ];

    #[test]
    fn test_sevenz_extraction() {
        let dir = tempdir().expect("Failed to create temporary directory");
        let extract_path: &Path = dir.path();

        let extractor = SevenZExtractor;
        let mut reader = Cursor::new(SEVEN_Z_ARCHIVE);

        extractor
            .extract(extract_path.to_str().unwrap().to_string(), &mut reader)
            .expect("Archive extraction should have succeeded");

        let extracted_file_path = extract_path.join("test.txt");
        assert!(
            extracted_file_path.exists(),
            "The file 'test.txt' should exist after extraction"
        );

        let content = fs::read_to_string(extracted_file_path)
            .expect("Failed to read the extracted file");

        assert_eq!(content.trim(), "hello 7z");
    }
}